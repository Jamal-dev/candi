################################################################################
## PETSc                                                                      ##
################################################################################

VERSION=3.24.0;CHECKSUM=2e798e2af5676d60132518878d83f842
NAME=petsc-${VERSION}
SOURCE=https://web.cels.anl.gov/projects/petsc/download/release-snapshots/
PACKING=.tar.gz

EXTRACTSTO=petsc-${VERSION}
BUILDCHAIN=custom

INSTALL_PATH=${INSTALL_PATH}/${EXTRACTSTO}

################################################################################

with64bit=0
if [ ${USE_64_BIT_INDICES} = ON ]; then
    with64bit=1
else
    with64bit=0
fi

CONFOPTS="\
  --with-debugging=0 \
  --with-shared-libraries=1 \
  --with-mpi=1 \
  --with-x=0 \
  --with-64-bit-indices=${with64bit}"


if [ ${USE_KOKKOS_WITH_CUDA} = ON ]; then
CONFOPTS="\
  ${CONFOPTS} \
  --with-kokkos=1 \
  --with-kokkos-kernels=1 \
  --with-cuda=1 \
  --with-cuda-dir=${CUDA_HOME} \
  --with-cuda-arch=${CUDA_ARCH} \
  --with-kokkos-dir=${KOKKOS_DIR} \
  --with-kokkos-kernels-dir=${KOKKOSKERNELS_DIR} \
  "
fi

if [ ${NATIVE_OPTIMIZATIONS} = ON ]; then
    OPTFLAGS="-O3 -march=native -mtune=native"
else
    # These are the PETSc default:
    OPTFLAGS="-g -O"
fi

if [ ! -z "${HYPRE_DIR}" ]; then
  CONFOPTS="${CONFOPTS} --with-hypre=1 --with-hypre-dir=${HYPRE_DIR}"
else
  CONFOPTS="${CONFOPTS} --download-hypre=1"
fi

if [ ! -z "${CC}" ]; then
    CONFOPTS="${CONFOPTS} CC=${CC}"
fi

if [ ! -z "${CXX}" ]; then
    CONFOPTS="${CONFOPTS} CXX=${CXX}"
fi

if [ ! -z "${FC}" ]; then
    CONFOPTS="${CONFOPTS} FC=${FC}"
fi

if [ ! -z "${F77}" ]; then
    CONFOPTS="${CONFOPTS} F77=${F77}"
fi

if [ ! -z "${F90}" ]; then
    CONFOPTS="${CONFOPTS} F90=${F90}"
fi

if [ ! -z "${MKL_DIR}" ]; then
    cecho ${INFO} "petsc: configuration with MKL"
    cecho ${INFO} "petsc: configuration with blas-lapack-dir=${MKL_DIR}"
    CONFOPTS="${CONFOPTS} --with-blas-lapack-dir=${MKL_DIR}"
else
    if [ ! -z "${BLAS_LIB}" ]; then
        cecho ${INFO} "petsc: configuration with --with-blas-lapack-lib=${BLAS_LIB}"
        CONFOPTS="${CONFOPTS} --with-blas-lapack-lib=${BLAS_LIB}"
    fi
fi

# Let PETSc download and build its own known-compatible versions of its
# dependencies. This is the most robust way to ensure compatibility.
cecho ${INFO} "PETSc: configured to download dependencies"
CONFOPTS="${CONFOPTS} \
  --download-parmetis=1 \
  --download-metis=1 \
  --download-slepc=1 \
  --download-scalapack=1"

# The MUMPS download is handled separately as it may require registration.
if [ ! -z "${MUMPS_DIR}" ]; then
    cecho ${INFO} "PETSc: configuration with MUMPS"
    CONFOPTS="${CONFOPTS} \
      --with-mumps-dir=${MUMPS_DIR}"
else
    CONFOPTS="${CONFOPTS} --download-mumps=1"
fi

################################################################################

package_specific_setup () {
    cd ${BUILDDIR}
    cp -rf ${UNPACK_PATH}/${EXTRACTSTO}/* .
    unset PETSC_DIR
    unset PETSC_ARCH

    ${PYTHON_INTERPRETER} ./configure --prefix=${INSTALL_PATH} ${CONFOPTS} \
        COPTFLAGS="${OPTFLAGS}" CXXOPTFLAGS="${OPTFLAGS}" FOPTFLAGS="${OPTFLAGS}"
    quit_if_fail "petsc ./configure failed"
    
    make all install
    quit_if_fail "petsc make all install failed"
}

# --- FIX APPLIED HERE ---
# After PETSc installs itself and its dependencies (SLEPc, ScaLAPACK),
# export the correct environment variables so subsequent packages like deal.II
# can find them all in the same location.
package_specific_register () {
    export PETSC_DIR=${INSTALL_PATH}
    export SLEPC_DIR=${INSTALL_PATH}
    export SCALAPACK_DIR=${INSTALL_PATH}
}

package_specific_conf () {
    CONFIG_FILE=${CONFIGURATION_PATH}/${EXTRACTSTO}
    rm -f ${CONFIG_FILE}
    echo "
export PETSC_DIR=${INSTALL_PATH}
export SLEPC_DIR=${INSTALL_PATH}
export SCALAPACK_DIR=${INSTALL_PATH}
" >> ${CONFIG_FILE}
}
