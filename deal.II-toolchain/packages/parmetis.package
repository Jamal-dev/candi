# This file builds GKlib, METIS, and ParMETIS from their official Git repos
# and patches/compiles them correctly for shared library usage.
VERSION=main
NAME=ParMETIS.git
SOURCE=https://github.com/KarypisLab/
PACKING=git
EXTRACTSTO=ParMETIS
BUILDCHAIN=custom

INSTALL_PATH=${INSTALL_PATH}/${NAME}

package_specific_build() {
    # --- Step 1: Build and Install GKlib ---
    cecho ${GOOD} "Building GKlib dependency first"
    cd ${UNPACK_PATH}
    
    if [ ! -d "GKlib" ]; then
        git clone https://github.com/KarypisLab/GKlib.git
        quit_if_fail "Cloning GKlib failed"
    fi
    
    cd GKlib
    cecho ${WARN} "patching GKlib/CMakeLists.txt for modern CMake"
    sed -i 's/cmake_minimum_required( *VERSION *[23]\.[0-9].*)/cmake_minimum_required(VERSION 3.16)/g' CMakeLists.txt

    # Add CFLAGS="-fPIC" to compile as position-independent code
    make config prefix=${INSTALL_PATH} cc=${CC} CFLAGS="-fPIC"
    quit_if_fail "GKlib make config failed"
    
    make -j${JOBS}
    quit_if_fail "GKlib make failed"
    
    make install
    quit_if_fail "GKlib make install failed"

    # --- Step 2: Build and Install METIS ---
    cecho ${GOOD} "Building METIS dependency"
    cd ${UNPACK_PATH}
    
    if [ ! -d "METIS" ]; then
        git clone https://github.com/KarypisLab/METIS.git
        quit_if_fail "Cloning METIS failed"
    fi
    
    cd METIS
    cecho ${WARN} "patching METIS/CMakeLists.txt for modern CMake"
    sed -i 's/cmake_minimum_required( *VERSION *[23]\.[0-9].*)/cmake_minimum_required(VERSION 3.16)/g' CMakeLists.txt
    
    # Add CFLAGS="-fPIC" here as well for consistency
    make config prefix=${INSTALL_PATH} cc=${CC} shared=1 gklib_path=${INSTALL_PATH} CFLAGS="-fPIC"
    quit_if_fail "metis make config failed"
    
    make -j${JOBS}
    quit_if_fail "metis make failed"
    
    make install
    quit_if_fail "metis make install failed"

    # --- Step 3: Build and Install ParMETIS ---
    cecho ${GOOD} "Building ParMETIS"
    cd ${UNPACK_PATH}/${EXTRACTSTO}
        
    # Add CFLAGS="-fPIC" here as well
    make config prefix=${INSTALL_PATH} cc=${CC} shared=1 gklib_path=${INSTALL_PATH} metis_path=${INSTALL_PATH} CFLAGS="-fPIC"
    quit_if_fail "parmetis make config failed"
    
    make -j${JOBS}
    quit_if_fail "parmetis make failed"
    
    make install
    quit_if_fail "parmetis make install failed"
}

package_specific_patch () {
    cd ${UNPACK_PATH}/${EXTRACTSTO}
    cecho ${WARN} "patching ParMETIS/CMakeLists.txt for modern CMake"
    sed -i 's/cmake_minimum_required( *VERSION *[23]\.[0-9].*)/cmake_minimum_required(VERSION 3.16)/g' CMakeLists.txt
}

package_specific_register () {
    export METIS_DIR=${INSTALL_PATH}
    export PARMETIS_DIR=${INSTALL_PATH}

    if [ ${PLATFORM_OSTYPE} == macos ]; then
        export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${INSTALL_PATH}/lib
    fi
}

package_specific_conf () {
    CONFIG_FILE=${CONFIGURATION_PATH}/${NAME}
    rm -f $CONFIG_FILE
    echo "
export METIS_DIR=${INSTALL_PATH}
export PARMETIS_DIR=${INSTALL_PATH}
" >> $CONFIG_FILE

    if [ ${PLATFORM_OSTYPE} == macos ]; then
        echo "export DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:${INSTALL_PATH}/lib
" >> $CONFIG_FILE
    fi
}
